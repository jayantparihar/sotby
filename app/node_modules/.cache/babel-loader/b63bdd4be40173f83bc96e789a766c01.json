{"ast":null,"code":"import _toConsumableArray from \"/media/matt/2-Samsung-Files/Documents/School/BCIT/Level_4/6_ISSP/my-repo/backup (copy)/ISSP-Fall-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/media/matt/2-Samsung-Files/Documents/School/BCIT/Level_4/6_ISSP/my-repo/backup (copy)/ISSP-Fall-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/matt/2-Samsung-Files/Documents/School/BCIT/Level_4/6_ISSP/my-repo/backup (copy)/ISSP-Fall-2022/src/components/TimelineGrid.jsx\";\nimport React, { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport RowHeader from './RowHeader';\nimport { useState } from \"react\";\nexport default function TimelineGrid(_ref) {\n  var _this = this;\n\n  var socket = _ref.socket,\n      heightLimit = _ref.heightLimit,\n      instructorArray = _ref.instructorArray,\n      createCourse = _ref.createCourse,\n      totalWeeks = _ref.totalWeeks,\n      onRemoveUser = _ref.onRemoveUser,\n      onAddUser = _ref.onAddUser;\n  var initialRowHeaderArray = instructorArray; // 100px height cells + 4 px total margin, change later if needed\n\n  var rowHeight = 204; // Height for the grid and for correct placment of the add row button\n\n  var _useState = useState(initialRowHeaderArray.length * rowHeight),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1]; // List of users\n\n\n  var _useState3 = useState(initialRowHeaderArray),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowHeaderArray = _useState4[0],\n      setRowHeaderArray = _useState4[1]; // Add a user to the timeline\n\n\n  var addRowHeader = function addRowHeader(user) {\n    var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (emit) {\n      socket.emit('userAdded', user);\n    } else {\n      setRowHeaderArray(function (rowHeaderArray) {\n        return [].concat(_toConsumableArray(rowHeaderArray), [{\n          key: user.username,\n          name: user.firstname + \" \" + user.lastname,\n          timeblocks: [],\n          vacations: []\n        }]);\n      }); // Set the height limit to the number of users * 2 since each user takes up 2 rows\n\n      heightLimit.set((rowHeaderArray.length + 1) * 2);\n      setHeight(function (height) {\n        return height + rowHeight;\n      }); // Call the add user function passed in from the interactive grid so that it could also be updated\n\n      onAddUser(user);\n    }\n  };\n\n  var removeRowHeader = function removeRowHeader(key, x) {\n    var emit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Check that an element has been found and removed before adjusting the row heights\n    setRowHeaderArray(function (rowHeaderArray) {\n      return _.reject(rowHeaderArray, function (element) {\n        return element.key === key;\n      });\n    });\n    setHeight(function (height) {\n      return height - rowHeight;\n    }); // Height limit not used, elements are locked to their rows\n\n    heightLimit.set((rowHeaderArray.length - 1) * 2); // Call the add user function passed in from the interactive grid so that it could also be updated\n\n    onRemoveUser(key, x - 1);\n    if (emit) socket.emit('userDeleted', key, x);\n  };\n\n  var createRowHeader = function createRowHeader(item, i) {\n    var x = i * 2 + 1;\n    return /*#__PURE__*/React.createElement(RowHeader, {\n      key: item.key + \"rowHeader\" + i,\n      socket: socket,\n      text: item.name,\n      position: {\n        x: x,\n        y: 1\n      },\n      width: totalWeeks,\n      height: 2,\n      removeFunction: function removeFunction() {\n        removeRowHeader(item.key, x);\n      },\n      createCourse: createCourse,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    });\n  }; //Use effect for attaching socket event listeners once the component mounts\n\n\n  useEffect(function () {\n    socket.on(\"userAdded\", function (user, state) {\n      console.log(\"Added: \" + JSON.stringify(user));\n      addRowHeader(user, false, state);\n    });\n    socket.on(\"userDeleted\", function (id, x) {\n      console.log(x);\n      console.log(id);\n      removeRowHeader(id, x, false);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container-layout\",\n    style: {\n      height: height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, rowHeaderArray.map(function (item, i) {\n    return createRowHeader(item, i);\n  })));\n}","map":{"version":3,"names":["React","useEffect","_","RowHeader","useState","TimelineGrid","socket","heightLimit","instructorArray","createCourse","totalWeeks","onRemoveUser","onAddUser","initialRowHeaderArray","rowHeight","length","height","setHeight","rowHeaderArray","setRowHeaderArray","addRowHeader","user","emit","key","username","name","firstname","lastname","timeblocks","vacations","set","removeRowHeader","x","reject","element","createRowHeader","item","i","y","on","state","console","log","JSON","stringify","id","map"],"sources":["/media/matt/2-Samsung-Files/Documents/School/BCIT/Level_4/6_ISSP/my-repo/backup (copy)/ISSP-Fall-2022/src/components/TimelineGrid.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport RowHeader from './RowHeader';\nimport { useState } from \"react\";\n\nexport default function TimelineGrid({socket, heightLimit, instructorArray, createCourse, totalWeeks, onRemoveUser, onAddUser}) {\n    const initialRowHeaderArray = instructorArray;\n\n    // 100px height cells + 4 px total margin, change later if needed\n    const rowHeight = 204; \n\n    // Height for the grid and for correct placment of the add row button\n    const [height, setHeight] = useState(initialRowHeaderArray.length * rowHeight);\n\n    // List of users\n    const [rowHeaderArray, setRowHeaderArray] = useState(initialRowHeaderArray);\n\n    // Add a user to the timeline\n    const addRowHeader = (user, emit=true) => {\n        if(emit) {\n            socket.emit('userAdded', user);\n        } else {\n            setRowHeaderArray(rowHeaderArray => [...rowHeaderArray, {key: user.username, name: user.firstname + \" \" + user.lastname, timeblocks: [], vacations: []}]);\n\n            // Set the height limit to the number of users * 2 since each user takes up 2 rows\n            heightLimit.set((rowHeaderArray.length + 1) * 2);\n            setHeight(height => height + rowHeight);\n    \n            // Call the add user function passed in from the interactive grid so that it could also be updated\n            onAddUser(user);\n        }\n    }\n\n    const removeRowHeader = (key, x, emit=true) => {\n        // Check that an element has been found and removed before adjusting the row heights\n        setRowHeaderArray(rowHeaderArray => _.reject(rowHeaderArray, (element) => {return element.key === key}));\n        setHeight(height => height - rowHeight);\n\n        // Height limit not used, elements are locked to their rows\n        heightLimit.set((rowHeaderArray.length - 1) * 2);\n\n        // Call the add user function passed in from the interactive grid so that it could also be updated\n        onRemoveUser(key, x - 1);\n\n        if(emit)\n            socket.emit('userDeleted', key, x); \n    }\n    \n    const createRowHeader = (item, i) => {\n        const x = i * 2 + 1;\n        return <RowHeader key={item.key + \"rowHeader\" + i} socket={socket} text={item.name} \n                position={{x: x, y: 1}} width={totalWeeks} height={2}\n                removeFunction={() => {\n                    removeRowHeader(item.key, x)}} \n                    createCourse={createCourse}/>\n    }\n\n    //Use effect for attaching socket event listeners once the component mounts\n    useEffect(() => {\n        socket.on(\"userAdded\", (user, state) => {\n            console.log(\"Added: \" + JSON.stringify(user));\n            addRowHeader(user, false, state);\n        });\n\n        socket.on(\"userDeleted\", (id, x) => {\n            console.log(x);\n            console.log(id);\n            removeRowHeader(id, x, false);\n        });\n    }, []);\n\n\n    return(\n        <React.Fragment>\n            <div className=\"grid-container-layout\" style={{height:height}}>\n                {\n                    rowHeaderArray.map((item, i) => {\n                        return (\n                            createRowHeader(item, i)\n                        )\n                    })\n                }\n            </div>\n        </React.Fragment>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}